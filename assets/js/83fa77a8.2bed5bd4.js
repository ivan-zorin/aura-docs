"use strict";(self.webpackChunk_localzet_aura_docs=self.webpackChunk_localzet_aura_docs||[]).push([[1446],{4660:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"guides/common-errors","title":"Common errors","description":"Aura Node","source":"@site/docs/guides/common-errors.md","sourceDirName":"guides","slug":"/guides/common-errors","permalink":"/docs/guides/common-errors","draft":false,"unlisted":false,"editUrl":"https://github.com/localzet/aura-docs/tree/main/docs/guides/common-errors.md","tags":[],"version":"current","lastUpdatedBy":"Ivan Zorin","lastUpdatedAt":1750179473000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Common errors"},"sidebar":"tutorialSidebar","previous":{"title":"Useful commands","permalink":"/docs/guides/useful-commands"},"next":{"title":"WARP outbound over WireGuard (Without warp-cli)","permalink":"/docs/guides/warp-outbound-over-wg"}}');var s=n(4848),t=n(8453);const a={sidebar_position:2,title:"Common errors"},i=void 0,l={},c=[{value:"Aura Node",id:"aura-node",level:2},{value:"XML-RPC fault: SPAWN_ERROR: xray",id:"xml-rpc-fault-spawn-error-xray",level:3},{value:"Problem",id:"problem",level:4},{value:"Why this happens",id:"why-this-happens",level:4},{value:"Solution",id:"solution",level:4}];function d(e){const r={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"aura-node",children:"Aura Node"}),"\n",(0,s.jsx)(r.h3,{id:"xml-rpc-fault-spawn-error-xray",children:"XML-RPC fault: SPAWN_ERROR: xray"}),"\n",(0,s.jsx)(r.h4,{id:"problem",children:"Problem"}),"\n",(0,s.jsx)(r.p,{children:"If you see the following error:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:'language-title="cd',metastring:'/opt/auranode && docker compose logs -f -t"',children:"auranode  | ERROR [HttpExceptionFilter]      Failed to get system stats - { stack: [ null ], code: 'A010', path: '/node/stats/get-system-stats' }\r\nauranode  | LOG [XrayService]      Getting config checksum...\r\nauranode  | LOG [XrayService]      XTLS config generated in: 1ms\r\n// highlight-next-line-red\r\nauranode  | ERROR [XrayService]      XML-RPC fault: SPAWN_ERROR: xray - { stack: [ null ] }\r\nauranode  | LOG [XrayService]      Start XTLS took: 2s 568ms\r\nauranode  | ERROR [StatsService]     Failed to get system stats: /xray.app.stats.command.StatsService/GetSysStats UNAVAILABLE: No connection established. Last error: connect ECONNREFUSED 127.0.0.1:61000 (2025-05-08T14:36:08.821Z) - { stack: [ null ], isOk: false, code: 'A002' }\n"})}),"\n",(0,s.jsx)(r.h4,{id:"why-this-happens",children:"Why this happens"}),"\n",(0,s.jsx)(r.p,{children:"This errors occurs when Xray core failed to start, most likely due to the wrong configuration."}),"\n",(0,s.jsx)(r.h4,{id:"solution",children:"Solution"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["Check the ",(0,s.jsx)(r.strong,{children:"Xray core"})," logs for more details."]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"docker exec -it auranode tail -n +1 -f /var/log/supervisor/xray.out.log\n"})}),"\n",(0,s.jsx)(r.p,{children:"or"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"docker exec -it auranode tail -n +1 -f /var/log/supervisor/xray.err.log\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"In most cases, you will see the reason why Xray core fails to start."}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["Fix the issue in Aura Panel dashboard under ",(0,s.jsx)(r.strong,{children:"Xray Config"})," section. Save the changes."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var o=n(6540);const s={},t=o.createContext(s);function a(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);